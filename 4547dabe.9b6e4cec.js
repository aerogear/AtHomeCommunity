(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(1),a=n(6),l=(n(0),n(126)),o={},i={id:"platform_starter",title:"platform_starter",description:"# OpenVolunteerPlatform Starter",source:"@site/../docs/platform_starter.md",permalink:"/docs/platform_starter",editUrl:"https://github.com/aerogear/OpenVolunteerPlatform/edit/master/website/../docs/platform_starter.md"},c=[{value:"Project structure",id:"project-structure",children:[]},{value:"Getting Started",id:"getting-started",children:[{value:"Running Apps and Server",id:"running-apps-and-server",children:[]},{value:"Technical details",id:"technical-details",children:[]},{value:"Running clients as Mobile Applications",id:"running-clients-as-mobile-applications",children:[]}]},{value:"Using MQTT for GraphQL subscriptions",id:"using-mqtt-for-graphql-subscriptions",children:[{value:"Running On OpenShift",id:"running-on-openshift",children:[]}]},{value:"Development",id:"development",children:[{value:"Executing Graphback source generator",id:"executing-graphback-source-generator",children:[]}]}],p={rightToc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"openvolunteerplatform-starter"},"OpenVolunteerPlatform Starter"),Object(l.b)("p",null,"This project contains reference implementation for\nvolunteer and admin application."),Object(l.b)("h2",{id:"project-structure"},"Project structure"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Volunteer Client application ",Object(l.b)("inlineCode",{parentName:"li"},"/client")),Object(l.b)("li",{parentName:"ul"},"Admin application ",Object(l.b)("inlineCode",{parentName:"li"},"/client-admin")),Object(l.b)("li",{parentName:"ul"},"Server application ",Object(l.b)("inlineCode",{parentName:"li"},"/server")),Object(l.b)("li",{parentName:"ul"},"Data model representing system api ",Object(l.b)("inlineCode",{parentName:"li"},"./server/model")),Object(l.b)("li",{parentName:"ul"},"OpenShift deployment ",Object(l.b)("inlineCode",{parentName:"li"},"./.openshift"))),Object(l.b)("h2",{id:"getting-started"},"Getting Started"),Object(l.b)("p",null,"Requirements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Docker and docker-compose"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://nodejs.org/en/download/"}),"https://nodejs.org/en/download/")," (Node.js 12.x or above)"),Object(l.b)("li",{parentName:"ul"},"(optional) access to a running OpenShift instance")),Object(l.b)("h3",{id:"running-apps-and-server"},"Running Apps and Server"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Install yarn and project dependencies")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"npm install -g yarn\nyarn\n")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Build client admin and client ")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"yarn\nyarn prepare:all\n")),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Start the server")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"cd ./server\ndocker-compose up -d\n## Wait at least minute for containers to start\nyarn keycloak:init\nyarn start\n")),Object(l.b)("ol",{start:5},Object(l.b)("li",{parentName:"ol"},"Links to applications should be printed in console.")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"    \ud83c\udfae Ionic PWA application available at http://localhost:4000\n    \ud83c\udfae Admin PWA application available at http://localhost:4000/admin\n")),Object(l.b)("p",null,"Volunteer accounts for logging to voulnteer app that can be used:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-log"}),"hzaub   \nkudi\nmsash\ntgers\ntmaure\nukon\nwtrocki\n")),Object(l.b)("p",null,"Admin application user:"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"ovp-admin")),Object(l.b)("p",null,"Volunteers can register to the application in login screen"),Object(l.b)("h3",{id:"technical-details"},"Technical details"),Object(l.b)("h4",{id:"keycloak-integration"},"Keycloak integration"),Object(l.b)("p",null,"Follow these instructions to set up Keycloak for Authentication/Authorization."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Configure the Keycloak Server")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"})),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"cd ./server\nyarn keycloak:init\n")),Object(l.b)("p",null,"This command creates the necessary resources in Keycloak and prints instructions ",Object(l.b)("em",{parentName:"p"},"you must follow to enable the integration.")," "),Object(l.b)("p",null,"Follow the instructions and copy the JSON configurations to the appropriate locations.\nThe  Starter app and server will read these configurations and the integration will be enabled when they are started."),Object(l.b)("h3",{id:"running-clients-as-mobile-applications"},"Running clients as Mobile Applications"),Object(l.b)("h4",{id:"for-ios"},"For IOS"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"cd ./client\nyarn cap add ios\nyarn run:ios\n")),Object(l.b)("h4",{id:"for-android"},"For Android:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"cd ./client\nyarn cap add android\nyarn run:android\n")),Object(l.b)("p",null,"When running locally you will need to also enable http traffic.\nFor example for android add ",Object(l.b)("inlineCode",{parentName:"p"},'android:usesCleartextTraffic#"true"')," to AndroidManifest.xml"),Object(l.b)("p",null,"Project should stard in IDE and can be launched as any other native application"),Object(l.b)("h2",{id:"using-mqtt-for-graphql-subscriptions"},"Using MQTT for GraphQL subscriptions"),Object(l.b)("p",null,"By default platform will use in memory subscription mechanism that is not\nrecomended to production. For OpenShift deployment we are using AMQ MQTT protocol. On local machine this can be configured using following steps."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Go to server/scripts ./mqtt"),Object(l.b)("li",{parentName:"ol"},"Execute docker-compose up"),Object(l.b)("li",{parentName:"ol"},"Set MQTT_HOST environment variable in .env file")),Object(l.b)("p",null,"MQTT_HOST#127.0.0.1"),Object(l.b)("h3",{id:"running-on-openshift"},"Running On OpenShift"),Object(l.b)("p",null,"Please check link:./.openshift","[.openshift]"," folder for more information."),Object(l.b)("h2",{id:"development"},"Development"),Object(l.b)("p",null,"Starter template is basing on ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://graphback.dev"}),"https://graphback.dev")," open source project.\nPlease follow Getting Started guide for Graphback to learn how to modify OpenVolunteer platform:"),Object(l.b)("p",null,Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://graphback.dev/docs/intro/datamodel"}),"https://graphback.dev/docs/intro/datamodel")),Object(l.b)("h3",{id:"executing-graphback-source-generator"},"Executing Graphback source generator"),Object(l.b)("p",null,"The below command will generate client side queries, mutations for the client side"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"yarn generate:all\n")))}b.isMDXComponent=!0},126:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},s=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=b(n),d=r,m=s["".concat(o,".").concat(d)]||s[d]||u[d]||l;return n?a.a.createElement(m,i({ref:t},p,{components:n})):a.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);