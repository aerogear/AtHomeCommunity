
---
  apiVersion: template.openshift.io/v1
  kind: Template
  labels:
      template: open-volunteer-platform-mongodb
  metadata:
      name: open-volunteer-platform-mongodb
      annotations:
      openshift.io/display-name: OVP 
      description: |-
          Template to setup MongoDB with replicas. 
      tags: mongodb, nodejs, openvolunteer
      iconClass: icon-nodejs
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_managed_integration/1/html-single/developing_a_data_sync_app/index
      openshift.io/support-url: https://access.redhat.com
      template.openshift.io/bindable: 'false'
      aerogear.org/datasync-template-version: '0.9.3'
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: open-volunteer-platform
      annotations:
        template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongodb")].port}
      name: mongodb
    spec:
      ports:
      - name: mongodb
        nodePort: 0
        port: 27017
        protocol: TCP
        targetPort: 27017
      selector:
        name: mongodb
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: open-volunteer-platform
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
      name: mongodb
    spec:
      replicas: 1
      selector:
        name: mongodb
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: mongodb
        spec:
          containers:
          - capabilities: {}
            env:
              - name: MONGODB_USERNAME
                value: user
              - name: MONGODB_PASSWORD
                value: password    
              - name: MONGODB_ROOT_PASSWORD
                value: password
              - name: MONGODB_DATABASE
                value: showcase
              - name: MONGODB_REPLICA_SET_MODE
                value: primary
              - name: MONGODB_ADVERTISED_HOSTNAME
                value: mongodb
              - name: MONGODB_REPLICA_SET_KEY
                value: replicasetkey123
            image: bitnami/mongodb:4.2
            imagePullPolicy: IfNotPresent
            name: mongodb
            readinessProbe:
              tcpSocket:
                port: 27017
              initialDelaySeconds: 5
              periodSeconds: 10
            livenessProbe:
              tcpSocket:
                port: 27017
              initialDelaySeconds: 5
              periodSeconds: 20
            ports:
            - containerPort: 27017
              protocol: TCP
            resources:
              limits:
                memory: 512Mi
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: "/dev/termination-log"
            volumeMounts:
            - mountPath: "/data/db"
              name: "mongodb-data"
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
          - name: "mongodb-data"
            persistentVolumeClaim:
              claimName: mongodb
    status: {}    
  
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: open-volunteer-platform
      name: mongodb
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "${VOLUME_CAPACITY}"      

  parameters:
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    value: 1Gi
              
