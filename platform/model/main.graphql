"""
@model
@crud.delete: false
"""
type DistributionCentre implements Address {
  id: ID!
  name: String
  address1: String
  address2: String
  city: String
  postcode: Int
  lat: Float
  long: Float
  """
  @oneToMany field: "distributionCentre"
  """
  products: [Product]
}

"""
@model
@crud.delete: false
"""
type Volunteer implements Address {
  id: ID!
  firstName: String
  lastName: String
  email: String
  username: String!
  address1: String
  address2: String
  city: String
  postcode: Int
  dateOfBirth: DateTime
  lat: Float
  long: Float
  
  """
  This does not work for MongoDB - https://github.com/aerogear/graphback/issues/1241
  @db.default: false
  """
  canDeliver: Boolean
  """
  @oneToMany field: 'volunteer'
  """
  actions: [VolunteerAction]
}

"""
@model
@crud.delete: false
"""
type Recipient implements Address {
  id: ID!
  firstName: String
  lastName: String
  phone: String
  address1: String
  address2: String
  postcode: Int
  city: String
  lat: Float
  long: Float
  createdAt: DateTime
  """
  Comma separated list of preferrend products labels.
  Easier to create volunteer actions when knowing what one really needs. 
  """
  prefferedProducts: String
  """
  @oneToMany field: 'recipient'
  """
  actions: [VolunteerAction]
}

"""
Represents action that is assigned to volunteer
@model
"""
type VolunteerAction {
  id: ID!
  title: String!
  description: String
  status: ActionStatus
  createdAt: DateTime
  """
  @manyToOne field: 'actions', key: 'volunteerId'
  """
  volunteer: Volunteer
  """
  @manyToOne field: 'actions', key: 'distributionCentreId'
  """
  distributionCentre: DistributionCentre
  """
  @oneToMany field: 'volunteerAction'
  """
  products: [VolunteerActionProduct]
}


"""
Represents a join model between a volunteer action and product

@model
@crud.create: true
@crud.update: false
@crud.delete: false
@crud.subCreate: false
@crud.subUpdate: false
@crud.subDelete: false
"""
type VolunteerActionProduct {
  id: ID!
}

interface Address {
  address1: String
  address2: String
  city: String
  postcode: Int
  lat: Float
  long: Float
}

"""
@model
@crud.delete: false
"""
type Product {
  id: ID!
  label: String!
  description: String
  """
  @oneToMany field: 'product'
  """
  volunteerActionProducts: [VolunteerActionProduct] 
}

enum ActionStatus {
  CREATED
  ASSIGNED
  COMPLETED
}

scalar DateTime
scalar ID
