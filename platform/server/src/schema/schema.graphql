## NOTE: This schema was generated by Graphback and should not be changed manually

enum ActionStatus {
  ASSIGNED
  COMPLETED
}

enum ActionType {
  PHONE_CALL
  DELIVERY
}

scalar DateTime

"""
@model
@crud.update: false
@crud.delete: false
"""
type DistributionCentre {
  id: ID!
  name: String
  address: String
  address2: String
  city: String
  lat: String
  long: String
  stockInformation: JSON

  """@oneToMany field: 'distributionCentre', key: 'distributionCentreId'"""
  actions: [VolunteerAction]!
  version: Int
}

input DistributionCentreInput {
  id: ID
  name: String
  address: String
  address2: String
  city: String
  lat: String
  long: String
  stockInformation: JSON
  version: Int
}

scalar JSON

type Mutation {
  createDistributionCentre(input: DistributionCentreInput): DistributionCentre!
  createVolunteer(input: VolunteerInput): Volunteer!
  updateVolunteer(input: VolunteerInput): Volunteer!
  createVolunteerAction(input: VolunteerActionInput): VolunteerAction!
  updateVolunteerAction(input: VolunteerActionInput): VolunteerAction!
  deleteVolunteerAction(input: VolunteerActionInput): VolunteerAction!
  createRecipient(input: RecipientInput): Recipient!
  updateRecipient(input: RecipientInput): Recipient!
}

type Query {
  findAllDistributionCentres(limit: Int, offset: Int): [DistributionCentre]!
  findDistributionCentres(fields: DistributionCentreInput, limit: Int, offset: Int): [DistributionCentre]!
  findAllVolunteers(limit: Int, offset: Int): [Volunteer]!
  findVolunteers(fields: VolunteerInput, limit: Int, offset: Int): [Volunteer]!
  findAllVolunteerActions(limit: Int, offset: Int): [VolunteerAction]!
  findVolunteerActions(fields: VolunteerActionInput, limit: Int, offset: Int): [VolunteerAction]!
  findAllRecipients(limit: Int, offset: Int): [Recipient]!
  findRecipients(fields: RecipientInput, limit: Int, offset: Int): [Recipient]!
}

"""
@model
@crud.delete: false
"""
type Recipient {
  id: ID!
  name: String!
  phone: String
  address: String
  createdAt: DateTime
  prefferedProducts: String

  """@oneToMany field: 'recipient', key: 'recipientId'"""
  actions: [VolunteerAction]
  version: Int
}

input RecipientInput {
  id: ID
  name: String
  phone: String
  address: String
  createdAt: DateTime
  prefferedProducts: String
  version: Int
}

type Subscription {
  newDistributionCentre(input: DistributionCentreInput): DistributionCentre!
  newVolunteer(input: VolunteerInput): Volunteer!
  updatedVolunteer(input: VolunteerInput): Volunteer!
  newVolunteerAction(input: VolunteerActionInput): VolunteerAction!
  updatedVolunteerAction(input: VolunteerActionInput): VolunteerAction!
  deletedVolunteerAction(input: VolunteerActionInput): VolunteerAction!
  newRecipient(input: RecipientInput): Recipient!
  updatedRecipient(input: RecipientInput): Recipient!
}

"""
@model
@crud.delete: false
"""
type Volunteer {
  id: ID!
  firstName: String
  lastName: String
  email: String
  username: String!
  address1: String
  address2: String
  city: String
  dateOfBirth: DateTime
  canPhoneCall: Boolean!
  canDeliver: Boolean!

  """@oneToMany field: 'volunteer', key: 'volunteerId'"""
  actions: [VolunteerAction]
  version: Int
}

"""
Represents action that is assigned to volunteer
@model
"""
type VolunteerAction {
  id: ID!
  title: String!
  description: String
  products: String!
  status: ActionStatus
  actionType: ActionType
  createdAt: DateTime

  """@manyToOne field: 'actions', key: 'volunteerId'"""
  volunteer: Volunteer

  """
  Workaround for https://github.com/aerogear/graphback/issues/1167
  @manyToOne field: 'actions', key: 'recipientId'
  """
  recipient: Recipient

  """@manyToOne field: 'actions', key: 'distributionCentreId'"""
  distributionCentre: DistributionCentre
  version: Int
}

input VolunteerActionInput {
  id: ID
  title: String
  description: String
  products: String
  status: ActionStatus
  actionType: ActionType
  createdAt: DateTime
  recipientId: ID
  volunteerId: ID
  distributionCentreId: ID
  version: Int
}

input VolunteerInput {
  id: ID
  firstName: String
  lastName: String
  email: String
  username: String
  address1: String
  address2: String
  city: String
  dateOfBirth: DateTime
  canPhoneCall: Boolean
  canDeliver: Boolean
  version: Int
}